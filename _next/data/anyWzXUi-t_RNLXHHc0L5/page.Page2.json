{"pageProps":{"initialState":{"dolanData":{},"dolanConfig":{},"isLoading":false,"isAuthenticated":false,"isDolanReady":true,"didInvalidateDolan":false,"spinnerText":"","spinnerBackgroundColor":null,"dolanTimestamp":1627177970758,"navConfig":{"blueprint":"legacy","legacyLayouts":{"webMenuType":"side_left"},"initPageId":"page.Page1","defaultPageId":"page.Page1","authenticationEnabled":false,"authPageId":"page.Page1","enabled":false,"headerEnabled":false,"headerText":"","tabs":[{"title":"Empty page","name":"t0"}],"screens":["page.Page1","page.Page2"],"routeConfigs":{"t0":{"initialRouteName":"page.Page1","iconName":"home"},"Login":{}}}},"route":{"name":"page.Page2","key":"page.Page2"},"screens":{"page.Page1":{"initStateProps":{"b8cda8de-321b-42a1-83c0-4e1692bf350b":["label"],"59137f00-e8fa-40c3-aef1-1dbb952868b6":["label"],"69a065f9-0046-4919-b266-85982f9ade58":["label"],"6aed0cfa-192a-429f-8b09-7fc45b19402f":["label"],"e28f172f-4927-4bcd-9eac-9d3399b74d1a":["label"],"c7ef6d58-f696-4787-9db9-d683435b7d04":["label"],"f756b860-347e-4ad0-a206-75e5af5fc328":["label"],"42afef87-e0ea-4d92-ac0c-805d2b7acb20":["label"],"07d21929-cc2e-4ab4-b33e-5c67adf2919b":["label"],"c4a14da7-cdd9-4d3d-a25f-ec5d43912fb2":["label"]},"pageFlowId":"page:1","pageId":"page.Page1","title":"Home Covid","showSpinnerOnLoad":true,"isPublic":true,"disableSafeArea":false,"parameters":{},"pageVariables":{},"dataReferences":{"BR":[],"PT":[]},"dataResources":[{"query":{},"action_name":"data.findAll","resource_name":"Covid19","reference_name":"BR","data_canvas_flow_id":"data:Covid19191879204"},{"query":{},"action_name":"data.findAll","resource_name":"Covid19","reference_name":"PT","data_canvas_flow_id":"data:Covid19196859280"}],"events":{"onPageDidMount":[{"id":"58aaf459.6c1d44"},{"id":"978c6c9c.44edb8"},{"id":"6a27e2e08ab44.30720c53b263a"}]},"components":[{"id":"1-17ddd27a-4342-46a8-88c8-21fdcbab2fc3","ch":[{"id":"7c1e59e4-7859-4ec8-9935-dabbf58c2374"},{"id":"ec082f26-7cb8-4f5c-8f24-7fbc8630db55"},{"id":"d89d1751-1c99-4db8-a1f1-be45e0a0ecb9","ch":[{"id":"7a591832-36e3-4c35-8930-c9f54967512a","ch":[{"id":"fe98a843-29f0-4ca4-8d06-eac1152c8e07","ch":[{"id":"49acb31d-944e-49da-8f44-83d62b2379db"}]}]},{"id":"25cde6d7-509d-4784-a847-d6eef241b480","ch":[{"id":"5451c23c-f9a7-4830-8324-ffd707a02e12","ch":[{"id":"b8cda8de-321b-42a1-83c0-4e1692bf350b","ch":[{"id":"8e6170f2-a0ef-48f2-90e4-f133858a66f2"},{"id":"a642a6ed-2cf3-4b1d-9df7-0ad8fbcd873a"}]},{"id":"59137f00-e8fa-40c3-aef1-1dbb952868b6","ch":[{"id":"b6e3fb01-0c95-4da4-8c77-f133858a66f2"},{"id":"cc55308c-b83f-4b58-8cba-0ad8fbcd873a"}]},{"id":"bec1d862-8892-47bb-810f-e8a433d976d1","ch":[{"id":"6dba3562-8bf3-461c-a286-205052f7de51"}]},{"id":"55d03173-4ca6-4b58-bcd9-3033a77b4d31"},{"id":"69a065f9-0046-4919-b266-85982f9ade58","ch":[{"id":"f3055c47-50cd-477a-b7d4-f133858a66f2"},{"id":"fcf253d0-0bb2-4050-81fe-0ad8fbcd873a"}]},{"id":"6aed0cfa-192a-429f-8b09-7fc45b19402f","ch":[{"id":"bbf7dc8d-24ee-42f2-afe2-f133858a66f2"},{"id":"f7093a7e-d494-41c8-b794-0ad8fbcd873a"}]},{"id":"e28f172f-4927-4bcd-9eac-9d3399b74d1a","ch":[{"id":"c69e02ba-cfef-4284-8aab-f133858a66f2"},{"id":"3a6b5fb5-75e7-495a-8d32-0ad8fbcd873a"}]},{"id":"c7ef6d58-f696-4787-9db9-d683435b7d04","ch":[{"id":"a8ccc2f4-4155-40d9-9691-f133858a66f2"},{"id":"759b6c8b-772c-4bcb-9f97-0ad8fbcd873a"}]},{"id":"f756b860-347e-4ad0-a206-75e5af5fc328","ch":[{"id":"509a9536-7b99-496f-8a3f-f133858a66f2"},{"id":"41f6aad5-e0c4-4f4f-8b3e-0ad8fbcd873a"}]},{"id":"b6cd59c2-a5eb-4cde-9000-562987fbd6d5","ch":[{"id":"91bd35fd-e8f0-458f-8a5d-205052f7de51"}]},{"id":"dbbd2ed2-eef3-4ab6-b98a-236126e72dd2"},{"id":"42afef87-e0ea-4d92-ac0c-805d2b7acb20","ch":[{"id":"8ff3893c-c89b-49ad-be9f-f133858a66f2"},{"id":"f53050ff-5fda-4ed4-bc66-0ad8fbcd873a"}]},{"id":"07d21929-cc2e-4ab4-b33e-5c67adf2919b","ch":[{"id":"6253e8b9-a7cb-4997-915f-f133858a66f2"},{"id":"c2666f6a-db68-460f-99b0-0ad8fbcd873a"}]},{"id":"32498b70-9eff-4770-8638-19ca89f7b32c","ch":[{"id":"6a7bc196-d714-4388-9328-205052f7de51"}]},{"id":"420ec023-b929-4730-8ca1-6f3a4aae4f9a"},{"id":"c4a14da7-cdd9-4d3d-a25f-ec5d43912fb2","ch":[{"id":"e46439d1-3018-4e3f-afa2-f133858a66f2"},{"id":"ccb9089e-1bee-4fdc-b995-0ad8fbcd873a"}]}]}]},{"id":"85738134-ce42-4524-9a62-9f110ca23cf4","ch":[{"id":"582bb53e-b9be-4032-8490-eac1152c8e07","ch":[{"id":"fbf2f538-8fa9-439a-b2c1-7b11dae7d7aa"}]}]}]}]}]},"page.Page2":{"initStateProps":{},"pageFlowId":"page:2","pageId":"page.Page2","title":"Global canvas","isGlobalCanvas":true,"disableSafeArea":false,"parameters":{},"pageVariables":{},"events":{},"components":[{"id":"2-9c27c122-3dd9-40a7-8ccf-1bdbdf34d87b"}]}},"flows":[{"x":420,"y":50,"z":"own_1d6d336a.9126c","id":"10544d20.64c85","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"response":{"key":"response@@@1ed52ea2.56495","source":"node"}},"source":"object"}},{"x":420,"y":50,"z":"own_232864f8.5b3ca","id":"1247cd23.4f318","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{},"source":"object"}},{"x":420,"y":50,"z":"own_8fe6bea6.1072","id":"1333ac45.8009c","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"response":{"key":"response@@@6afc87de.47ec9","source":"node"}},"source":"object"}},{"x":210,"y":40,"z":"own_97b54227.3b127","id":"147f90f1.617fe","func":"const {\n  time,\n  unit,\n} = msg;\n\nconst unitCoefficientMap = {\n  ms: 1,\n  s: 1000,\n  min: 1000 * 60,\n  h: 1000 * 60 * 60,\n};\n\nif (time <= 0) {\n  return msg;\n}\n\nconst timeToWait = time * unitCoefficientMap[unit];\n\nif (supersonic.api.delay) {\n  supersonic.api.delay(() => { node.send(msg); }, timeToWait, msg.contextId);\n} else {\n  setTimeout(() => {\n    node.send(msg);\n  }, timeToWait);\n}","type":"function","noerr":0,"wires":[[]],"outputs":1},{"x":420,"y":50,"z":"own_105ec0bb.2f7d7","id":"15f7596e.557a0","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{},"source":"object"}},{"x":210,"y":40,"z":"own_d51109f.3b25d","id":"19b93bf3.89208","func":"const { request, contextId, supersonic } = inputs;\nconst { resourceName, id, parameters = {} } = request;\n\nconst { getComponentContextProp } = supersonic.context;\nconst { getResourceConfig } = supersonic.api.data;\n\nconst get = (p, o) => {\n  const isNumber = (v) => typeof v === 'number';\n  const isBoolean = (v) => typeof v === 'boolean';\n  const isNull = (v) => v === null;\n  const isString = (v) => typeof v === 'string';\n  return p.reduce((xs, x) => (\n    xs && (xs[x] || isNumber(xs[x]) || isBoolean(xs[x]) || isNull(xs[x]) || isString(xs[x])) ? xs[x] : undefined\n  ), o);\n};\n\nconst importRecord = (record, mappingFields = []) => {\n  const importedData = {};\n  mappingFields.forEach((field) => {\n    if (field && field.mapping && field.mapping.length) {\n      const value = get(field.mapping, record);\n      if (value !== undefined) {\n        importedData[field.propertyName] = value;\n      }\n    }\n  });\n  return importedData;\n};\n\nconst adapterPrefix = 'adapter';\nconst [prefix, boundResource] = (resourceName || '').split(':');\nconst isAdapter = prefix === adapterPrefix;\n\nconst getActualResourceName = () => {\n  if (isAdapter) {\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\n    return (\n      get(['mapping', 'value'], adapterProp) || get(['value'], adapterProp) || resourceName\n    );\n  }\n  return resourceName;\n};\n\nconst getMapping = () => (\n  isAdapter\n    ? get(['mapping', 'fields'], getComponentContextProp(contextId.rootContextId, boundResource, contextId, true))\n    : null\n);\n\nconst getAdapterFields = () => {\n  const adapterFields = {};\n  const fields = ['identifier'];\n  if (isAdapter) {\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\n    fields.forEach((field) => {\n      adapterFields[field] = get(['mapping', field], adapterProp) || get([field], adapterProp);\n    });\n  }\n  return adapterFields;\n};\n\nconst mappingFields = getMapping(resourceName);\nconst isMappedAdapter = isAdapter && !!mappingFields;\n\nasync function makeRequest() {\n  const resourceConfig = getResourceConfig(getActualResourceName(resourceName));\n  const { driverConfiguration = {} } = resourceConfig;\n  const resourceType = resourceConfig.type || driverConfiguration.type;\n\n  if (!resourceConfig) {\n    // This is assumed to be a legacy data resource\n    const data = await supersonic.resource.find(resourceName, id, {});\n    return data && data.value && data.value.object;\n  }\n  // Load a local data resource\n  if (resourceType === 'local') {\n    const { appId } = await supersonic.api.app.getAppId();\n    const key = `local-resource:${appId}:${resourceName}:${id}`;\n    const { data: record } = await supersonic.api.asyncStorage.getItem({ key });\n    if (record != null && typeof record === 'object' && typeof record.id !== 'undefined') {\n      return record;\n    }\n    throw new Error(`Record ${resourceName} with ID ${id} not found`);\n  }\n  if (resourceType === 'agdb') {\n    const data = await supersonic.resource.find(resourceConfig.agdb_id, id, {});\n    return data && data.value && data.value.object;\n  }\n  if (supersonic.api.data.drivers && resourceType in supersonic.api.data.drivers) {\n    const driver = supersonic.api.data.drivers[resourceType];\n    if (!driver.execute) {\n      throw new Error(`Invalid or missing driver for Resource ${resourceName}`);\n    }\n    let authConfig;\n    if (resourceType === 'firestore') {\n      try {\n        const { firebase } = supersonic.api;\n        const currentUser = await new Promise((resolve, reject) => {\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n            unsubscribe();\n            resolve(user);\n          }, reject);\n        });\n        const token = await currentUser.getIdToken();\n        authConfig = {\n          type: 'bearer',\n          authToken: token,\n        };\n      } catch (err) {\n        /* ignore error and attempt query anyway */\n      }\n    }\n    const agQuery = {\n      resource: resourceConfig,\n      operation: 'retrieve',\n      authConfig,\n      ...request,\n      ...getAdapterFields(),\n    };\n    const response = await driver.execute(agQuery);\n    if (!response || response.message) {\n      throw new Error(response ? response.message : 'Request failed');\n    }\n    const record = response.record || response.data || null;\n    return record;\n  }\n  // Load a \"REST\" data resource\n  const operation = resourceConfig.operations.retrieve;\n  if (!operation) {\n    throw new Error(`Resource ${resourceName} does not support getting a single record`);\n  }\n  const requestParameters = [\n    ...resourceConfig.parameters,\n    ...operation.parameters,\n  ];\n  const headers = {};\n  const queryComponents = [];\n  let url = `${resourceConfig.base_url}${operation.relative_path || ''}`;\n  requestParameters.forEach((parameter) => {\n    let value = parameters[parameter.id];\n    if (parameter.is_static || typeof value === 'undefined') {\n      value = parameter.default;\n    }\n    if (value == null) {\n    // No value for this parameter\n      if (parameter.is_optional) {\n        return;\n      }\n      throw new Error(`Missing required parameter ${JSON.stringify(parameter.title)}`);\n    }\n    // Map the parameter to headers/URL/query\n    const { placement } = parameter;\n    const placementKey = parameter.placement_key;\n    if (placement === 'header') {\n      // Add to headers\n      headers[placementKey] = value;\n    } else if (placement === 'query') {\n      // Add to the URL as a query parameter\n      queryComponents.push(`${encodeURIComponent(placementKey)}=${encodeURIComponent(String(value))}`);\n    } else if (placement === 'path') {\n      // Replace the placeholder in the URL with escaped string\n      url = url.replace(new RegExp(`{\\\\s*${placementKey}\\\\s*}`, 'g'), encodeURIComponent(String(value)));\n    } else if (placement === 'url') {\n      // Replace the placeholder in the URL with unescaped string\n      url = url.replace(new RegExp(`{\\\\s*${placementKey}\\\\s*}`, 'g'), String(value));\n    }\n  });\n  // Add any query parameters to the URL\n  if (queryComponents.length) {\n    const newQuery = queryComponents.join('&');\n    url = url.replace(/(?:\\?(.*))?$/, (_, query) => (query ? `?${query}&${newQuery}` : `?${newQuery}`));\n  }\n  // Perform the request\n  const response = await fetch(url, { method: 'GET', headers });\n  if (!response.ok) {\n    throw response;\n  }\n  let result = await response.json();\n  const resultPath = operation.response_key_path ? operation.response_key_path.split('.') : [];\n  while (result != null && resultPath.length) {\n    result = result[resultPath.shift()];\n  }\n  if (!result) {\n    throw new Error(`A ${resourceName} record not found from the response!`);\n  }\n  return result;\n}\n\ntry {\n  const record = await makeRequest();\n  if (Array.isArray(record)) {\n    const errorStr = 'The server responded with a list for a single data record. The response must be an object.';\n    return [1, {\n      error: {\n        code: 'responseMustBeObject',\n        status: -1,\n        message: errorStr,\n        rawError: new Error(errorStr),\n      },\n    }];\n  }\n\n  return [0, { record: !isMappedAdapter ? record : importRecord(record, mappingFields) }];\n} catch (error) {\n  // eslint-disable-next-line no-console\n  // console.warn(error);\n  let errorStr = String(error);\n\n  if (errorStr.startsWith('Error: Couldn\\'t find data resource')) {\n    return [1, {\n      error: {\n        code: 'resourceNotFound',\n        status: 404,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  }\n  if (errorStr === 'TypeError: Failed to fetch') {\n    errorStr += '. Does the server allow CORS?';\n    return [1, {\n      error: {\n        code: 'requestFailed',\n        status: error.status,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  } if (!error.json) {\n    return [1, {\n      error: {\n        code: 'unknown',\n        status: -1,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  }\n  let rawError;\n  try {\n    const body = await error.json();\n    rawError = body;\n    errorStr = `JSON error response from server: ${JSON.stringify(body)}.`;\n  } catch {\n    errorStr = 'Non-JSON error body.';\n    rawError = { message: errorStr };\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    return [1, {\n      error: {\n        code: 'serverError',\n        status: error.status,\n        message: errorStr,\n        rawError,\n      },\n    }];\n  }\n}","type":"function2","noerr":0,"wires":[["c55913f3.8d802"],["731bd1e9.4983c"]],"outputs":2,"function_inputs":{"key":{"request":{"key":"request","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{"record":{"name":"record","type":"dataResourceRetrieveResponse","title":"Record","description":"The successfully retrieved record."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown","responseMustBeObject"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\n\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\n- `serverError`: Thrown if the server returned an error response.\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\n- `unknown`: Thrown if an unknown error occurred while fetching the record.\n- `responseMustBeObject`: Thrown if the server does not return an object as a response for a single data record request."}},"additionalProperties":false}]},{"x":420,"y":100,"z":"own_21057d66.1a85e","id":"1b4bfc12.808a7","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"error":{"key":"error@@@441d4b92.6ac8d","source":"node"}},"source":"object"}},{"x":420,"y":100,"z":"own_100f5064.6f140","id":"1c88f5a9.1d6dc","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"error":{"key":"error@@@f0bf1a1a.10aa3","source":"node"}},"source":"object"}},{"x":210,"y":40,"z":"own_91f3e62e.3f65c","id":"1eb859fe.2c9fd","func":"const { supersonic, contextId } = inputs;\nawait supersonic.api.spinner.hide(contextId);","type":"function2","noerr":0,"wires":[["2efe9993.2abdf"]],"outputs":1,"function_inputs":{"key":{"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{},"additionalProperties":false}]},{"x":210,"y":40,"z":"own_1d6d336a.9126c","id":"1ed52ea2.56495","func":"const { request, contextId, supersonic } = inputs;\nconst { resourceName, properties = {}, parameters = {} } = request;\n\nconst { getComponentContextProp } = supersonic.context;\nconst { getResourceConfig } = supersonic.api.data;\n\nconst get = (p, o) => {\n  const isNumber = (v) => typeof v === 'number';\n  const isBoolean = (v) => typeof v === 'boolean';\n  const isNull = (v) => v === null;\n  const isString = (v) => typeof v === 'string';\n  return p.reduce((xs, x) => (\n    xs && (xs[x] || isNumber(xs[x]) || isBoolean(xs[x]) || isNull(xs[x]) || isString(xs[x])) ? xs[x] : undefined\n  ), o);\n};\n\nconst importRecord = (record, mappingFields = []) => {\n  const importedData = {};\n  mappingFields.forEach((field) => {\n    if (field && field.mapping && field.mapping.length) {\n      const value = get(field.mapping, record);\n      if (value !== undefined) {\n        importedData[field.propertyName] = value;\n      }\n    }\n  });\n  return importedData;\n};\n\nconst setNestedProp = (obj = {}, [first, ...rest], value) => ({\n  ...obj,\n  [first]: rest.length\n    ? setNestedProp(obj[first], rest, value)\n    : value,\n});\n\nconst exportRecord = (record, mappingFields = []) => {\n  let exportedRecord = {};\n  mappingFields.forEach((field) => {\n    if (field && field.mapping && field.mapping.length) {\n      exportedRecord = setNestedProp(exportedRecord, field.mapping, get([field.propertyName], record));\n    }\n  });\n  return exportedRecord;\n};\n\nconst exportResourceConfig = (resourceConfig, mappingFields) => {\n  const exportedResourceConfig = { ...resourceConfig };\n  if (resourceConfig.record) {\n    exportedResourceConfig.record = exportRecord(resourceConfig.record, mappingFields);\n  }\n  return exportedResourceConfig;\n};\n\nconst adapterPrefix = 'adapter';\nconst [prefix, boundResource] = (resourceName || '').split(':');\nconst isAdapter = prefix === adapterPrefix;\n\nconst getActualResourceName = () => {\n  if (isAdapter) {\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\n    return (\n      get(['mapping', 'value'], adapterProp) || get(['value'], adapterProp) || resourceName\n    );\n  }\n  return resourceName;\n};\n\nconst getMapping = () => (\n  isAdapter\n    ? get(['mapping', 'fields'], getComponentContextProp(contextId.rootContextId, boundResource, contextId, true))\n    : null\n);\n\nconst mappingFields = getMapping(resourceName);\nconst isMappedAdapter = isAdapter && !!mappingFields;\n\nasync function makeRequest() {\n  const resourceConfig = getResourceConfig(getActualResourceName(resourceName));\n  const { driverConfiguration = {} } = resourceConfig;\n  const resourceType = resourceConfig.type || driverConfiguration.type;\n\n  const getTLD = () => {\n    const environment = self.DOLAN.environment.endpoints.data;\n    let TLD = environment.match(/.*\\.(.*gyver\\..{2,5})\\//)[1];\n    if (TLD.includes('/')) {\n      TLD = TLD.substring(9, TLD.length - 3);\n    } else {\n      TLD = TLD.substring(9, TLD.length);\n    }\n    return TLD;\n  };\n\n  const TLD = self.DOLAN ? getTLD() : '';\n  if (!resourceConfig) {\n    if (TLD === 'eu' || TLD === 'black') {\n      throw new Error(`Couldn't find data resource with given name: ${resourceName}.`);\n    }\n    // This is assumed to be a legacy data resource\n    const data = await supersonic.resource.create(resourceName, { object: properties });\n    return data && data.value && data.value.object;\n  }\n\n  // Create a local data resource\n  if (resourceType === 'local') {\n    const { id } = properties;\n    if (id == null) {\n      throw new Error(`Missing ${resourceName} record ID`);\n    }\n    const { appId } = await supersonic.api.app.getAppId();\n    const key = `local-resource:${appId}:${resourceName}:${id}`;\n    const { data: record } = await supersonic.api.asyncStorage.getItem({ key });\n    if (record != null && typeof record === 'object' && typeof record.id !== 'undefined') {\n      throw new Error(`Record ${resourceName} with ID ${id} already exists`);\n    }\n    await supersonic.api.asyncStorage.setItem({ key, data: properties });\n    return properties;\n  }\n  // Create an AGDB data resource\n  if (resourceType === 'agdb') {\n    const data = await supersonic.resource.create(resourceConfig.agdb_id, { object: properties });\n    return data && data.value && data.value.object;\n  }\n  if (supersonic.api.data.drivers && resourceType in supersonic.api.data.drivers) {\n    const driver = supersonic.api.data.drivers[resourceType];\n    if (!driver.execute) {\n      throw new Error(`Invalid or missing driver for Resource ${resourceName}`);\n    }\n    let authConfig;\n    if (resourceType === 'firestore') {\n      try {\n        const { firebase } = supersonic.api;\n        const currentUser = await new Promise((resolve, reject) => {\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n            unsubscribe();\n            resolve(user);\n          }, reject);\n        });\n        const token = await currentUser.getIdToken();\n        authConfig = {\n          type: 'bearer',\n          authToken: token,\n        };\n      } catch (err) {\n        /* ignore error and attempt query anyway */\n      }\n    }\n    let agQuery = {\n      resource: resourceConfig,\n      operation: 'create',\n      authConfig,\n      ...request,\n    };\n    if (isMappedAdapter) {\n      agQuery = exportResourceConfig(agQuery, mappingFields);\n    }\n    const response = await driver.execute(agQuery);\n    if (!response || response.message) {\n      throw new Error(response ? response.message : 'Request failed');\n    }\n    const record = response.record || response.data || null;\n    return record;\n  }\n  // Create a \"REST\" data resource\n  const operation = resourceConfig.operations.create;\n  if (!operation) {\n    throw new Error(`Resource ${resourceName} does not support creating new records`);\n  }\n  const requestParameters = [\n    ...resourceConfig.parameters,\n    ...operation.parameters,\n  ];\n  const requestSchema = operation.request_schema;\n  const isEmptyResponse = !properties || (requestSchema != null && requestSchema.type === 'undefined');\n  const headers = isEmptyResponse ? {} : { 'Content-Type': 'application/json' };\n  const body = isEmptyResponse ? undefined : JSON.stringify(properties);\n  const queryComponents = [];\n  let url = `${resourceConfig.base_url}${operation.relative_path || ''}`;\n  requestParameters.forEach((parameter) => {\n    let value = parameters[parameter.id];\n    if (parameter.is_static || typeof value === 'undefined') {\n      value = parameter.default;\n    }\n    if (value == null) {\n    // No value for this parameter\n      if (parameter.is_optional) {\n        return;\n      }\n      throw new Error(`Missing required parameter ${JSON.stringify(parameter.title)}`);\n    }\n    // Map the parameter to headers/URL/query\n    const { placement } = parameter;\n    const placementKey = parameter.placement_key;\n    if (placement === 'header') {\n      // Add to headers\n      headers[placementKey] = value;\n    } else if (placement === 'query') {\n      // Add to the URL as a query parameter\n      queryComponents.push(`${encodeURIComponent(placementKey)}=${encodeURIComponent(String(value))}`);\n    } else if (placement === 'path') {\n      // Replace the placeholder in the URL with escaped string\n      url = url.replace(new RegExp(`{\\\\s*${placementKey}\\\\s*}`, 'g'), encodeURIComponent(String(value)));\n    } else if (placement === 'url') {\n      // Replace the placeholder in the URL with unescaped string\n      url = url.replace(new RegExp(`{\\\\s*${placementKey}\\\\s*}`, 'g'), String(value));\n    }\n  });\n  // Add any query parameters to the URL\n  if (queryComponents.length) {\n    const newQuery = queryComponents.join('&');\n    url = url.replace(/(?:\\?(.*))?$/, (_, query) => (query ? `?${query}&${newQuery}` : `?${newQuery}`));\n  }\n  // Perform the request\n  const response = await fetch(url, { method: 'POST', headers, body });\n  if (!response.ok) {\n    throw response;\n  }\n  let result;\n  try {\n    result = await response.json();\n  } catch (e) {\n    result = null;\n  }\n  const resultPath = operation.response_key_path ? operation.response_key_path.split('.') : [];\n  while (result != null && resultPath.length) {\n    result = result[resultPath.shift()];\n  }\n  return result;\n}\n\ntry {\n  const response = await makeRequest();\n  return [0, { response: !isMappedAdapter ? response : importRecord(response, mappingFields) }];\n} catch (error) {\n  // eslint-disable-next-line no-console\n  // console.warn(error);\n  let errorStr = String(error);\n\n  if (errorStr.startsWith('Error: Couldn\\'t find data resource')) {\n    return [1, {\n      error: {\n        code: 'resourceNotFound',\n        status: 404,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  }\n\n  if (errorStr === 'TypeError: Failed to fetch') {\n    errorStr += '. Does the server allow CORS?';\n    return [1, {\n      error: {\n        code: 'requestFailed',\n        status: error.status,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  } if (!error.json) {\n    return [1, {\n      error: {\n        code: 'unknown',\n        status: -1,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  }\n  let rawError;\n  try {\n    const body = await error.json();\n    rawError = body;\n    errorStr = `JSON error response from server: ${JSON.stringify(body)}.`;\n  } catch {\n    errorStr = 'Non-JSON error body.';\n    rawError = { message: errorStr };\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    return [1, {\n      error: {\n        code: 'serverError',\n        status: error.status,\n        message: errorStr,\n        rawError,\n      },\n    }];\n  }\n}","type":"function2","noerr":0,"wires":[["10544d20.64c85"],["ca3c4967.8fc25"]],"outputs":2,"function_inputs":{"key":{"request":{"key":"request","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceCreateResponse","title":"Response","description":"Response returned by the data resource after the record is successfully created."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\n\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\n- `serverError`: Thrown if the server returned an error response.\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\n- `unknown`: Thrown if an unknown error occurred while creating the record."}},"additionalProperties":false}]},{"x":420,"y":50,"z":"own_100f5064.6f140","id":"1fe9fc4d.4458c","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"records":{"key":"records@@@f0bf1a1a.10aa3","source":"node"}},"source":"object"}},{"x":210,"y":40,"z":"own_232864f8.5b3ca","id":"2057f7f5.50363","func":"const { text, supersonic } = inputs;\nawait supersonic.api.spinner.show({\n  text,\n});","type":"function2","noerr":0,"wires":[["1247cd23.4f318"]],"outputs":1,"function_inputs":{"key":{"text":{"key":"text","source":"input"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{},"additionalProperties":false}]},{"x":420,"y":50,"z":"own_91f3e62e.3f65c","id":"2efe9993.2abdf","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{},"source":"object"}},{"x":210,"y":40,"z":"own_21057d66.1a85e","id":"441d4b92.6ac8d","func":"const { request, contextId, supersonic } = inputs;\nconst {\n  resourceName,\n  id,\n  properties = {},\n  parameters = {},\n} = request;\n\nconst { getComponentContextProp } = supersonic.context;\nconst { getResourceConfig } = supersonic.api.data;\n\nconst get = (p, o) => {\n  const isNumber = (v) => typeof v === 'number';\n  const isBoolean = (v) => typeof v === 'boolean';\n  const isNull = (v) => v === null;\n  const isString = (v) => typeof v === 'string';\n  return p.reduce((xs, x) => (\n    xs && (xs[x] || isNumber(xs[x]) || isBoolean(xs[x]) || isNull(xs[x]) || isString(xs[x])) ? xs[x] : undefined\n  ), o);\n};\n\nconst importRecord = (record, mappingFields = []) => {\n  const importedData = {};\n  mappingFields.forEach((field) => {\n    if (field && field.mapping && field.mapping.length) {\n      const value = get(field.mapping, record);\n      if (value !== undefined) {\n        importedData[field.propertyName] = value;\n      }\n    }\n  });\n  return importedData;\n};\n\nconst setNestedProp = (obj = {}, [first, ...rest], value) => ({\n  ...obj,\n  [first]: rest.length\n    ? setNestedProp(obj[first], rest, value)\n    : value,\n});\n\nconst exportRecord = (record, mappingFields = []) => {\n  let exportedRecord = {};\n  mappingFields.forEach((field) => {\n    if (field && field.mapping && field.mapping.length) {\n      exportedRecord = setNestedProp(exportedRecord, field.mapping, get([field.propertyName], record));\n    }\n  });\n  return exportedRecord;\n};\n\nconst exportResourceConfig = (resourceConfig, mappingFields) => {\n  const exportedResourceConfig = { ...resourceConfig };\n  if (resourceConfig.record) {\n    exportedResourceConfig.record = exportRecord(resourceConfig.record, mappingFields);\n  }\n  return exportedResourceConfig;\n};\n\nconst adapterPrefix = 'adapter';\nconst [prefix, boundResource] = (resourceName || '').split(':');\nconst isAdapter = prefix === adapterPrefix;\n\nconst getActualResourceName = () => {\n  if (isAdapter) {\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\n    return (\n      get(['mapping', 'value'], adapterProp) || get(['value'], adapterProp) || resourceName\n    );\n  }\n  return resourceName;\n};\n\nconst getMapping = () => (\n  isAdapter\n    ? get(['mapping', 'fields'], getComponentContextProp(contextId.rootContextId, boundResource, contextId, true))\n    : null\n);\n\nconst getAdapterFields = () => {\n  const adapterFields = {};\n  const fields = ['identifier'];\n  if (isAdapter) {\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\n    fields.forEach((field) => {\n      adapterFields[field] = get(['mapping', field], adapterProp) || get([field], adapterProp);\n    });\n  }\n  return adapterFields;\n};\n\nconst mappingFields = getMapping(resourceName);\nconst isMappedAdapter = isAdapter && !!mappingFields;\n\nasync function makeRequest() {\n  const resourceConfig = getResourceConfig(getActualResourceName(resourceName));\n  const { driverConfiguration = {} } = resourceConfig;\n  const resourceType = resourceConfig.type || driverConfiguration.type;\n\n  const getTLD = () => {\n    const environment = self.DOLAN.environment.endpoints.data;\n    let TLD = environment.match(/.*\\.(.*gyver\\..{2,5})\\//)[1];\n    if (TLD.includes('/')) {\n      TLD = TLD.substring(9, TLD.length - 3);\n    } else {\n      TLD = TLD.substring(9, TLD.length);\n    }\n    return TLD;\n  };\n\n  const TLD = self.DOLAN ? getTLD() : '';\n  if (!resourceConfig) {\n    if (TLD === 'eu' || TLD === 'black') {\n      throw new Error(`Couldn't find data resource with given name: ${resourceName}.`);\n    }\n    // This is assumed to be a legacy data resource\n    const data = await supersonic.resource.update(resourceName, { object: properties }, id);\n    return data && data.value && data.value.object;\n  }\n\n  if (resourceType === 'agdb') {\n    const data = await supersonic.resource.update(resourceConfig.agdb_id, { object: properties }, id);\n    return data && data.value && data.value.object;\n  }\n  // Update a local data resource\n  if (resourceType === 'local') {\n    if (id == null) {\n      throw new Error(`Missing ${resourceName} record ID`);\n    }\n    // Omit the 'id' from the properties in case it has it\n    const updatedProperties = { ...properties };\n    delete updatedProperties.id;\n    const { appId } = await supersonic.api.app.getAppId();\n    const key = `local-resource:${appId}:${resourceName}:${id}`;\n    const { data: record } = await supersonic.api.asyncStorage.getItem({ key });\n    if (record == null || typeof record !== 'object' || typeof record.id === 'undefined') {\n      throw new Error(`Record ${resourceName} with ID ${id} does not exist`);\n    }\n    const updatedRecord = { ...record, ...updatedProperties };\n    await supersonic.api.asyncStorage.setItem({ key, data: updatedRecord });\n    return updatedRecord;\n  }\n  if (supersonic.api.data.drivers && resourceType in supersonic.api.data.drivers) {\n    const driver = supersonic.api.data.drivers[resourceType];\n    if (!driver.execute) {\n      throw new Error(`Invalid or missing driver for Resource ${resourceName}`);\n    }\n    let authConfig;\n    if (resourceType === 'firestore') {\n      try {\n        const { firebase } = supersonic.api;\n        const currentUser = await new Promise((resolve, reject) => {\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n            unsubscribe();\n            resolve(user);\n          }, reject);\n        });\n        const token = await currentUser.getIdToken();\n        authConfig = {\n          type: 'bearer',\n          authToken: token,\n        };\n      } catch (err) {\n        /* ignore error and attempt query anyway */\n      }\n    }\n    let agQuery = {\n      resource: resourceConfig,\n      operation: 'update',\n      authConfig,\n      ...request,\n      ...getAdapterFields(),\n    };\n    if (isMappedAdapter) {\n      agQuery = exportResourceConfig(agQuery, mappingFields);\n    }\n    const response = await driver.execute(agQuery);\n    if (!response || response.message) {\n      throw new Error(response ? response.message : 'Request failed');\n    }\n    const record = response.record || response.data || null;\n    return record;\n  }\n  // Update a \"REST\" data resource\n  const operation = resourceConfig.operations.replace;\n  if (!operation) {\n    throw new Error(`Resource ${resourceName} does not support updating records`);\n  }\n  const requestParameters = [\n    ...resourceConfig.parameters,\n    ...operation.parameters,\n  ];\n  const requestSchema = operation.request_schema;\n  const isEmptyResponse = !properties || (requestSchema != null && requestSchema.type === 'undefined');\n  const headers = isEmptyResponse ? {} : { 'Content-Type': 'application/json' };\n  const body = isEmptyResponse ? undefined : JSON.stringify(properties);\n  const queryComponents = [];\n  let url = `${resourceConfig.base_url}${operation.relative_path || ''}`;\n  requestParameters.forEach((parameter) => {\n    let value = parameters[parameter.id];\n    if (parameter.is_static || typeof value === 'undefined') {\n      value = parameter.default;\n    }\n    if (value == null) {\n    // No value for this parameter\n      if (parameter.is_optional) {\n        return;\n      }\n      throw new Error(`Missing required parameter ${JSON.stringify(parameter.title)}`);\n    }\n    // Map the parameter to headers/URL/query\n    const { placement } = parameter;\n    const placementKey = parameter.placement_key;\n    if (placement === 'header') {\n      // Add to headers\n      headers[placementKey] = value;\n    } else if (placement === 'query') {\n      // Add to the URL as a query parameter\n      queryComponents.push(`${encodeURIComponent(placementKey)}=${encodeURIComponent(String(value))}`);\n    } else if (placement === 'path') {\n      // Replace the placeholder in the URL with escaped string\n      url = url.replace(new RegExp(`{\\\\s*${placementKey}\\\\s*}`, 'g'), encodeURIComponent(String(value)));\n    } else if (placement === 'url') {\n      // Replace the placeholder in the URL with unescaped string\n      url = url.replace(new RegExp(`{\\\\s*${placementKey}\\\\s*}`, 'g'), String(value));\n    }\n  });\n  // Add any query parameters to the URL\n  if (queryComponents.length) {\n    const newQuery = queryComponents.join('&');\n    url = url.replace(/(?:\\?(.*))?$/, (_, query) => (query ? `?${query}&${newQuery}` : `?${newQuery}`));\n  }\n  // Perform the request\n  const method = operation.method || 'PUT';\n  const response = await fetch(url, { method, headers, body });\n  if (!response.ok) {\n    throw response;\n  }\n  let result = await response.json();\n  const resultPath = operation.response_key_path ? operation.response_key_path.split('.') : [];\n  while (result != null && resultPath.length) {\n    result = result[resultPath.shift()];\n  }\n  return result;\n}\n\ntry {\n  const response = await makeRequest();\n  return [0, { response: !isMappedAdapter ? response : importRecord(response, mappingFields) }];\n} catch (error) {\n  // eslint-disable-next-line no-console\n  // console.warn(error);\n  let errorStr = String(error);\n\n  if (errorStr.startsWith('Error: Couldn\\'t find data resource')) {\n    return [1, {\n      error: {\n        code: 'resourceNotFound',\n        status: 404,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  }\n\n  if (errorStr === 'TypeError: Failed to fetch') {\n    errorStr += '. Does the server allow CORS?';\n    return [1, {\n      error: {\n        code: 'requestFailed',\n        status: error.status,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  } if (!error.json) {\n    return [1, {\n      error: {\n        code: 'unknown',\n        status: -1,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  }\n  let rawError;\n  try {\n    const body = await error.json();\n    rawError = body;\n    errorStr = `JSON error response from server: ${JSON.stringify(body)}.`;\n  } catch {\n    errorStr = 'Non-JSON error body.';\n    rawError = { message: errorStr };\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    return [1, {\n      error: {\n        code: 'serverError',\n        status: error.status,\n        message: errorStr,\n        rawError,\n      },\n    }];\n  }\n}","type":"function2","noerr":0,"wires":[["58e438b4.7c48c"],["1b4bfc12.808a7"]],"outputs":2,"function_inputs":{"key":{"request":{"key":"request","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceReplaceResponse","title":"Response","description":"Response returned by the data resource after the record is successfully updated."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\n\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\n- `serverError`: Thrown if the server returned an error response.\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\n- `unknown`: Thrown if an unknown error occurred while updating the record."}},"additionalProperties":false}]},{"x":420,"y":50,"z":"own_21057d66.1a85e","id":"58e438b4.7c48c","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"response":{"key":"response@@@441d4b92.6ac8d","source":"node"}},"source":"object"}},{"x":210,"y":40,"z":"own_8fe6bea6.1072","id":"6afc87de.47ec9","func":"const { request, supersonic } = inputs;\nconst {\n  resourceName,\n  properties,\n  id,\n  parameters = {},\n} = request;\n\nasync function makeRequest() {\n  const resourceConfig = supersonic.api.data.getResourceConfig(resourceName);\n  const { driverConfiguration = {} } = resourceConfig;\n  const resourceType = resourceConfig.type || driverConfiguration.type;\n\n  const getTLD = () => {\n    const environment = self.DOLAN.environment.endpoints.data;\n    let TLD = environment.match(/.*\\.(.*gyver\\..{2,5})\\//)[1];\n    if (TLD.includes('/')) {\n      TLD = TLD.substring(9, TLD.length - 3);\n    } else {\n      TLD = TLD.substring(9, TLD.length);\n    }\n    return TLD;\n  };\n\n  const TLD = self.DOLAN ? getTLD() : '';\n  if (!resourceConfig) {\n    if (TLD === 'eu' || TLD === 'black') {\n      throw new Error(`Couldn't find data resource with given name: ${resourceName}.`);\n    }\n    // This is assumed to be a legacy data resource\n    await supersonic.resource.remove(resourceName, id);\n    return {};\n  }\n  // Delete a local data resource\n  if (resourceType === 'local') {\n    if (id == null) {\n      throw new Error(`Missing ${resourceName} record ID`);\n    }\n    const { appId } = await supersonic.api.app.getAppId();\n    const key = `local-resource:${appId}:${resourceName}:${id}`;\n    await supersonic.api.asyncStorage.removeItem({ key });\n    return {};\n  }\n  if (resourceType === 'agdb') {\n    const data = await supersonic.resource.remove(resourceConfig.agdb_id, id);\n    return data && data.value && data.value.object;\n  }\n  if (supersonic.api.data.drivers && resourceType in supersonic.api.data.drivers) {\n    const driver = supersonic.api.data.drivers[resourceType];\n    if (!driver.execute) {\n      throw new Error(`Invalid or missing driver for Resource ${resourceName}`);\n    }\n    let authConfig;\n    if (resourceType === 'firestore') {\n      try {\n        const { firebase } = supersonic.api;\n        const currentUser = await new Promise((resolve, reject) => {\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n            unsubscribe();\n            resolve(user);\n          }, reject);\n        });\n        const token = await currentUser.getIdToken();\n        authConfig = {\n          type: 'bearer',\n          authToken: token,\n        };\n      } catch (err) {\n        /* ignore error and attempt query anyway */\n      }\n    }\n    const agQuery = {\n      resource: resourceConfig,\n      operation: 'delete',\n      authConfig,\n      ...request,\n    };\n    const response = await driver.execute(agQuery);\n    if (!response || response.message) {\n      throw new Error(response ? response.message : 'Request failed');\n    }\n    const record = response.record || response.data || null;\n    return record;\n  }\n  // Delete a \"REST\" data resource\n  const operation = resourceConfig.operations.delete;\n  if (!operation) {\n    throw new Error(`Resource ${resourceName} does not support deleting records`);\n  }\n  const requestParameters = [\n    ...resourceConfig.parameters,\n    ...operation.parameters,\n  ];\n  const requestSchema = operation.request_schema;\n  const isEmptyResponse = !properties || (requestSchema != null && requestSchema.type === 'undefined');\n  const headers = isEmptyResponse ? {} : { 'Content-Type': 'application/json' };\n  const body = isEmptyResponse ? undefined : JSON.stringify(properties);\n  const queryComponents = [];\n  let url = `${resourceConfig.base_url}${operation.relative_path || ''}`;\n  requestParameters.forEach((parameter) => {\n    let value = parameters[parameter.id];\n    if (parameter.is_static || typeof value === 'undefined') {\n      value = parameter.default;\n    }\n    if (value == null) {\n      // No value for this parameter\n      if (parameter.is_optional) {\n        return;\n      }\n      throw new Error(`Missing required parameter ${JSON.stringify(parameter.title)}`);\n    }\n    // Map the parameter to headers/URL/query\n    const { placement } = parameter;\n    const placementKey = parameter.placement_key;\n    if (placement === 'header') {\n      // Add to headers\n      headers[placementKey] = value;\n    } else if (placement === 'query') {\n      // Add to the URL as a query parameter\n      queryComponents.push(`${encodeURIComponent(placementKey)}=${encodeURIComponent(String(value))}`);\n    } else if (placement === 'path') {\n      // Replace the placeholder in the URL with escaped string\n      url = url.replace(new RegExp(`{\\\\s*${placementKey}\\\\s*}`, 'g'), encodeURIComponent(String(value)));\n    } else if (placement === 'url') {\n      // Replace the placeholder in the URL with unescaped string\n      url = url.replace(new RegExp(`{\\\\s*${placementKey}\\\\s*}`, 'g'), String(value));\n    }\n  });\n  // Add any query parameters to the URL\n  if (queryComponents.length) {\n    const newQuery = queryComponents.join('&');\n    url = url.replace(/(?:\\?(.*))?$/, (_, query) => (query ? `?${query}&${newQuery}` : `?${newQuery}`));\n  }\n  // Perform the request\n  const response = await fetch(url, { method: 'DELETE', headers, body });\n  if (!response.ok) {\n    throw response;\n  }\n  let result;\n  try {\n    result = await response.json();\n  } catch (error) {\n    result = {};\n  }\n  const resultPath = operation.response_key_path ? operation.response_key_path.split('.') : [];\n  while (result != null && resultPath.length) {\n    result = result[resultPath.shift()];\n  }\n  return result;\n}\n\ntry {\n  const response = await makeRequest();\n  return [0, { response }];\n} catch (error) {\n  // eslint-disable-next-line no-console\n  // console.warn(error);\n  let errorStr = String(error);\n\n  if (errorStr.startsWith('Error: Couldn\\'t find data resource')) {\n    return [1, {\n      error: {\n        code: 'resourceNotFound',\n        status: 404,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  }\n\n  if (errorStr === 'TypeError: Failed to fetch') {\n    errorStr += '. Does the server allow CORS?';\n    return [1, {\n      error: {\n        code: 'requestFailed',\n        status: error.status,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  } if (!error.json) {\n    return [1, {\n      error: {\n        code: 'unknown',\n        status: -1,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  }\n  let rawError;\n  try {\n    const body = await error.json();\n    rawError = body;\n    errorStr = `JSON error response from server: ${JSON.stringify(body)}.`;\n  } catch {\n    errorStr = 'Non-JSON error body.';\n    rawError = { message: errorStr };\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    return [1, {\n      error: {\n        code: 'serverError',\n        status: error.status,\n        message: errorStr,\n        rawError,\n      },\n    }];\n  }\n}","type":"function2","noerr":0,"wires":[["1333ac45.8009c"],["6b1b3c9b.2009a"]],"outputs":2,"function_inputs":{"key":{"request":{"key":"request","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceDeleteResponse","title":"Response","description":"Response returned by the data resource after the record is successfully deleted."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\n\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\n- `serverError`: Thrown if the server returned an error response.\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\n- `unknown`: Thrown if an unknown error occurred while deleting the record."}},"additionalProperties":false}]},{"x":420,"y":100,"z":"own_8fe6bea6.1072","id":"6b1b3c9b.2009a","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"error":{"key":"error@@@6afc87de.47ec9","source":"node"}},"source":"object"}},{"x":420,"y":100,"z":"own_d51109f.3b25d","id":"731bd1e9.4983c","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"error":{"key":"error@@@19b93bf3.89208","source":"node"}},"source":"object"}},{"x":420,"y":50,"z":"own_d51109f.3b25d","id":"c55913f3.8d802","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"record":{"key":"record@@@19b93bf3.89208","source":"node"}},"source":"object"}},{"x":420,"y":100,"z":"own_1d6d336a.9126c","id":"ca3c4967.8fc25","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"error":{"key":"error@@@1ed52ea2.56495","source":"node"}},"source":"object"}},{"x":210,"y":40,"z":"own_105ec0bb.2f7d7","id":"dd5da27b.11c99","func":"const { assignment, supersonic, contextId } = inputs;\nconst { reference, data } = assignment || {};\nawait supersonic.context.setDataReference(reference, data, true, contextId);","type":"function2","noerr":0,"wires":[["15f7596e.557a0"]],"outputs":1,"function_inputs":{"key":{"contextId":{"key":"contextId","source":"msg"},"assignment":{"key":"assignment","source":"input"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{},"additionalProperties":false}]},{"x":210,"y":40,"z":"own_100f5064.6f140","id":"f0bf1a1a.10aa3","func":"const { request, contextId, supersonic } = inputs;\nconst { resourceName, parameters = {} } = request;\n\nconst { getComponentContextProp } = supersonic.context;\nconst { getResourceConfig } = supersonic.api.data;\n\nconst get = (p, o) => {\n  const isNumber = (v) => typeof v === 'number';\n  const isBoolean = (v) => typeof v === 'boolean';\n  const isNull = (v) => v === null;\n  const isString = (v) => typeof v === 'string';\n  return p.reduce((xs, x) => (\n    xs && (xs[x] || isNumber(xs[x]) || isBoolean(xs[x]) || isNull(xs[x]) || isString(xs[x])) ? xs[x] : undefined\n  ), o);\n};\n\nconst importRecord = (record, mappingFields = []) => {\n  const importedData = {};\n  mappingFields.forEach((field) => {\n    if (field && field.mapping && field.mapping.length) {\n      const value = get(field.mapping, record);\n      if (value !== undefined) {\n        importedData[field.propertyName] = value;\n      }\n    }\n  });\n  return importedData;\n};\nconst adapterPrefix = 'adapter';\nconst [prefix, boundResource] = (resourceName || '').split(':');\nconst isAdapter = prefix === adapterPrefix;\n\nconst getActualResourceName = () => {\n  if (isAdapter) {\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\n    return (\n      get(['mapping', 'value'], adapterProp) || get(['value'], adapterProp) || resourceName\n    );\n  }\n  return resourceName;\n};\n\nconst getMapping = () => (\n  isAdapter\n    ? get(['mapping', 'fields'], getComponentContextProp(contextId.rootContextId, boundResource, contextId, true))\n    : null\n);\n\nconst mappingFields = getMapping(resourceName);\nconst isMappedAdapter = isAdapter && !!mappingFields;\n\nasync function makeRequest() {\n  const resourceConfig = getResourceConfig(getActualResourceName(resourceName));\n  const { driverConfiguration = {} } = resourceConfig;\n  const resourceType = resourceConfig.type || driverConfiguration.type;\n\n  if (!resourceConfig || resourceType === 'agdb') {\n    // This is assumed to be a legacy data resource\n    const query = parameters.query || {};\n    // AGDB -related parameters are added to the query in a special way\n    const { sort } = parameters;\n    const { filters } = parameters;\n    const { limit } = parameters;\n    const { skip } = parameters;\n\n    if (sort != null) {\n      query.sort = JSON.stringify(sort);\n    }\n    if (filters != null) {\n      query.query = JSON.stringify(filters);\n    }\n    if (limit != null) {\n      query.limit = limit;\n    }\n    if (skip != null) {\n      query.skip = skip;\n    }\n\n    const backendResourceName = (resourceConfig && resourceConfig.agdb_id) || resourceName;\n    const data = await supersonic.resource.findAll(backendResourceName, query);\n    return (data && data.value && data.value.objects) || [];\n  }\n  // Load a local data resource\n  if (resourceType === 'local') {\n    const { appId } = await supersonic.api.app.getAppId();\n    const keyPrefix = `local-resource:${appId}:${resourceName}:`;\n    const { data: allKeys } = await supersonic.api.asyncStorage.getAllKeys();\n    const keys = allKeys.filter((key) => key.startsWith(keyPrefix));\n    const { data: results } = await supersonic.api.asyncStorage.multiGet({ data: keys });\n    return (results || [])\n      .map(([, record]) => {\n        if (typeof record === 'string') {\n          try {\n            return JSON.parse(record);\n          } catch (error) {\n            return null;\n          }\n        }\n        return record;\n      })\n      .filter((record) => record != null && typeof record === 'object' && typeof record.id !== 'undefined');\n  }\n  if (supersonic.api.data.drivers && resourceType in supersonic.api.data.drivers) {\n    const driver = supersonic.api.data.drivers[resourceType];\n    if (!driver.execute) {\n      throw new Error(`Invalid or missing driver for Resource ${resourceName}`);\n    }\n    let authConfig;\n    if (resourceType === 'firestore') {\n      try {\n        const { firebase } = supersonic.api;\n        const currentUser = await new Promise((resolve, reject) => {\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n            unsubscribe();\n            resolve(user);\n          }, reject);\n        });\n        const token = await currentUser.getIdToken();\n        authConfig = {\n          type: 'bearer',\n          authToken: token,\n        };\n      } catch (err) {\n        /* ignore error and attempt query anyway */\n      }\n    }\n    const agQuery = {\n      resource: resourceConfig,\n      operation: 'list',\n      authConfig,\n      ...request,\n    };\n    const response = await driver.execute(agQuery);\n    if (!response || response.message) {\n      throw new Error(response ? response.message : 'Request failed');\n    }\n    const records = response.records || response.data || [];\n    return records;\n  }\n  // Load a \"REST\" data resource\n  const operation = resourceConfig.operations.list;\n  if (!operation) {\n    throw new Error(`Resource ${resourceName} does not support getting record collections`);\n  }\n  const requestParameters = [\n    ...resourceConfig.parameters,\n    ...operation.parameters,\n  ];\n  const headers = {};\n  const queryComponents = [];\n  let url = `${resourceConfig.base_url}${operation.relative_path || ''}`;\n  requestParameters.forEach((parameter) => {\n    let value = parameters[parameter.id];\n    if (parameter.is_static || typeof value === 'undefined') {\n      value = parameter.default;\n    }\n    if (value == null) {\n      // No value for this parameter\n      if (parameter.is_optional) {\n        return;\n      }\n      throw new Error(`Missing required parameter ${JSON.stringify(parameter.title)}`);\n    }\n    // Map the parameter to headers/URL/query\n    const { placement } = parameter;\n    const placementKey = parameter.placement_key;\n    if (placement === 'header') {\n      // Add to headers\n      headers[placementKey] = value;\n    } else if (placement === 'query') {\n      // Add to the URL as a query parameter\n      queryComponents.push(`${encodeURIComponent(placementKey)}=${encodeURIComponent(String(value))}`);\n    } else if (placement === 'path') {\n      // Replace the placeholder in the URL with escaped string\n      url = url.replace(new RegExp(`{\\\\s*${placementKey}\\\\s*}`, 'g'), encodeURIComponent(String(value)));\n    } else if (placement === 'url') {\n      // Replace the placeholder in the URL with unescaped string\n      url = url.replace(new RegExp(`{\\\\s*${placementKey}\\\\s*}`, 'g'), String(value));\n    }\n  });\n  // Add any query parameters to the URL\n  if (queryComponents.length) {\n    const newQuery = queryComponents.join('&');\n    url = url.replace(/(?:\\?(.*))?$/, (_, query) => (query ? `?${query}&${newQuery}` : `?${newQuery}`));\n  }\n  // Perform the request\n  const response = await fetch(url, { method: 'GET', headers });\n  if (!response.ok) {\n    throw response;\n  }\n  const responseJson = await response.json();\n  let results = responseJson;\n  const resultPath = operation.response_key_path ? operation.response_key_path.split('.') : [];\n  while (results != null && resultPath.length) {\n    results = results[resultPath.shift()];\n  }\n  if (!Array.isArray(results)) {\n    throw new Error(`\nThe result was not an array. Maybe the data you're looking for is inside one of the response object keys?\n\n${JSON.stringify(responseJson, null, 2)}\n`);\n  }\n  return results;\n}\n\ntry {\n  const records = await makeRequest();\n  return [0, { records: !isMappedAdapter ? records : records.map((record) => importRecord(record, mappingFields)) }];\n} catch (error) {\n  // eslint-disable-next-line no-console\n  // console.warn(error);\n  let errorStr = String(error);\n\n  if (errorStr.startsWith('Error: Couldn\\'t find data resource')) {\n    return [1, {\n      error: {\n        code: 'resourceNotFound',\n        status: 404,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  }\n  if (errorStr === 'TypeError: Failed to fetch') {\n    errorStr += '. Does the server allow CORS?';\n    return [1, {\n      error: {\n        code: 'requestFailed',\n        status: error.status,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  } if (!error.json) {\n    return [1, {\n      error: {\n        code: 'unknown',\n        status: -1,\n        message: errorStr,\n        rawError: error,\n      },\n    }];\n  }\n  let rawError;\n  try {\n    const body = await error.json();\n    rawError = body;\n    errorStr = `JSON error response from server: ${JSON.stringify(body)}.`;\n  } catch {\n    errorStr = 'Non-JSON error body.';\n    rawError = { message: errorStr };\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    return [1, {\n      error: {\n        code: 'serverError',\n        status: error.status,\n        message: errorStr,\n        rawError,\n      },\n    }];\n  }\n}","type":"function2","noerr":0,"wires":[["1fe9fc4d.4458c"],["1c88f5a9.1d6dc"]],"outputs":2,"function_inputs":{"key":{"request":{"key":"request","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{"records":{"name":"records","type":"dataResourceListResponse","title":"Collection of records","description":"The successfully retrieved collection of records."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\n\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\n- `serverError`: Thrown if the server returned an error response.\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\n- `unknown`: Thrown if an unknown error occurred while fetching the collection of records."}},"additionalProperties":false}]},{"id":"own_8fe6bea6.1072","in":[{"x":40,"y":40,"wires":[{"id":"6afc87de.47ec9"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"1333ac45.8009c","port":0}]},{"x":490,"y":100,"wires":[{"id":"6b1b3c9b.2009a","port":0}]}],"type":"subflow","arguments":[{"name":"request","type":"dataResourceDeleteRequest","title":"Delete data record request","minLength":1,"description":"Configuration required by the data resource to delete a single data record."}],"outputSchemas":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceDeleteResponse","title":"Response","description":"Response returned by the data resource after the record is successfully deleted."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\n\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\n- `serverError`: Thrown if the server returned an error response.\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\n- `unknown`: Thrown if an unknown error occurred while deleting the record."}},"additionalProperties":false}],"outputArguments":[]},{"id":"own_d51109f.3b25d","in":[{"x":40,"y":40,"wires":[{"id":"19b93bf3.89208"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"c55913f3.8d802","port":0}]},{"x":490,"y":100,"wires":[{"id":"731bd1e9.4983c","port":0}]}],"type":"subflow","arguments":[{"name":"request","type":"dataResourceRetrieveRequest","title":"Get data record request","minLength":1,"description":"Configuration required by the selected data resource to get a single data record."}],"outputSchemas":[{"type":"object","properties":{"record":{"name":"record","type":"dataResourceRetrieveResponse","title":"Record","description":"The successfully retrieved record."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown","responseMustBeObject"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\n\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\n- `serverError`: Thrown if the server returned an error response.\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\n- `unknown`: Thrown if an unknown error occurred while fetching the record.\n- `responseMustBeObject`: Thrown if the server does not return an object as a response for a single data record request."}},"additionalProperties":false}],"outputArguments":[]},{"id":"own_100f5064.6f140","in":[{"x":40,"y":40,"wires":[{"id":"f0bf1a1a.10aa3"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"1fe9fc4d.4458c","port":0}]},{"x":490,"y":100,"wires":[{"id":"1c88f5a9.1d6dc","port":0}]}],"type":"subflow","arguments":[{"name":"request","type":"dataResourceListRequest","title":"Get data record collection request","minLength":1,"description":"Configuration required by the selected data resource to get a collection of data records."}],"outputSchemas":[{"type":"object","properties":{"records":{"name":"records","type":"dataResourceListResponse","title":"Collection of records","description":"The successfully retrieved collection of records."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\n\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\n- `serverError`: Thrown if the server returned an error response.\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\n- `unknown`: Thrown if an unknown error occurred while fetching the collection of records."}},"additionalProperties":false}],"outputArguments":[]},{"id":"own_105ec0bb.2f7d7","in":[{"x":40,"y":40,"wires":[{"id":"dd5da27b.11c99"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"15f7596e.557a0","port":0}]}],"type":"subflow","arguments":[{"name":"assignment","type":"dataReferenceAssignment","title":"Data variable","minLength":1,"description":"Data variable to set"}],"outputSchemas":[{"type":"object","properties":{},"additionalProperties":false}],"outputArguments":[]},{"id":"own_1d6d336a.9126c","in":[{"x":40,"y":40,"wires":[{"id":"1ed52ea2.56495"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"10544d20.64c85","port":0}]},{"x":490,"y":100,"wires":[{"id":"ca3c4967.8fc25","port":0}]}],"type":"subflow","arguments":[{"name":"request","type":"dataResourceCreateRequest","title":"Create data record request","minLength":1,"description":"Configuration required by the selected data resource to create a new data record."}],"outputSchemas":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceCreateResponse","title":"Response","description":"Response returned by the data resource after the record is successfully created."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\n\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\n- `serverError`: Thrown if the server returned an error response.\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\n- `unknown`: Thrown if an unknown error occurred while creating the record."}},"additionalProperties":false}],"outputArguments":[]},{"id":"own_21057d66.1a85e","in":[{"x":40,"y":40,"wires":[{"id":"441d4b92.6ac8d"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"58e438b4.7c48c","port":0}]},{"x":490,"y":100,"wires":[{"id":"1b4bfc12.808a7","port":0}]}],"type":"subflow","arguments":[{"name":"request","type":"dataResourceReplaceRequest","title":"Update data record request","minLength":1,"description":"Configuration required by the selected data resource to update an existing data record."}],"outputSchemas":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceReplaceResponse","title":"Response","description":"Response returned by the data resource after the record is successfully updated."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\n\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\n- `serverError`: Thrown if the server returned an error response.\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\n- `unknown`: Thrown if an unknown error occurred while updating the record."}},"additionalProperties":false}],"outputArguments":[]},{"id":"own_232864f8.5b3ca","in":[{"x":40,"y":40,"wires":[{"id":"2057f7f5.50363"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"1247cd23.4f318","port":0}]}],"type":"subflow","arguments":[{"name":"text","type":"string","title":"Spinner text","description":"Optional text label to show below the spinner. Subsequent calls to **Show spinner*** will update the text label, useful to e.g. show loading progress updates."}],"outputSchemas":[{"type":"object","properties":{},"additionalProperties":false}],"outputArguments":[]},{"id":"own_91f3e62e.3f65c","in":[{"x":40,"y":40,"wires":[{"id":"1eb859fe.2c9fd"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"2efe9993.2abdf","port":0}]}],"type":"subflow","arguments":[],"outputSchemas":[{"type":"object","properties":{},"additionalProperties":false}],"outputArguments":[]},{"id":"own_97b54227.3b127","in":[{"x":40,"y":40,"wires":[{"id":"147f90f1.617fe"}]}],"out":[{"x":380,"y":40,"wires":[{"id":"147f90f1.617fe","port":0}]}],"type":"subflow","arguments":[{"name":"time","type":"number","title":"Time to wait","default":500,"minLength":1,"description":"Time to wait as an integer. Negative values result in 0 delay."},{"enum":["ms","s","min","h"],"name":"unit","type":"string","title":"Unit","default":"ms","minLength":1,"description":"Unit of time to wait: `ms` for millisecond, `s` for second, `min` for minute and `h` for hour."}],"outputArguments":[]},{"x":350,"y":30,"z":"data:Covid19196859280","id":"81a37596.691f4","type":"subflow:own_100f5064.6f140","wires":[["61a64a41.eb62bc","99cfccf1.755488"],["99cfccf1.755488"]],"request":{"parameters":{"query_day":{"script":"NOW(\"YYYY-MM-DD\")","formula":"NOW(\"YYYY-MM-DD\")","functions":["NOW"],"dependencies":[]},"query_country":"portugal"},"resourceName":"Covid19"},"request-type":{"parameters":{"query_day":"expression","query_country":"str"},"resourceName":"resource"},"subflow_input_arguments":{"request":{"key":{"parameters":{"query_day":{"script":"NOW(\"YYYY-MM-DD\")","formula":"NOW(\"YYYY-MM-DD\")","functions":["NOW"],"dependencies":[]},"query_country":"portugal"},"resourceName":"Covid19"},"source":{"parameters":{"query_day":"expression","query_country":"str"},"resourceName":"resource"}}}},{"x":350,"y":110,"z":"data:Covid19191879204","id":"a04e12d.374aff","type":"subflow:own_97b54227.3b127","wires":[["701ee485.655dfc"]],"subflow_input_arguments":{"time":{"key":5000,"source":"num"},"unit":{"key":"ms","source":"str"}}},{"x":362,"y":97,"z":"page:1","id":"d1f6fa81.08f3a","type":"subflow:own_100f5064.6f140","wires":[["f35865866c254.45cc82dd4befd"],[]],"request":{"parameters":{"query_day":{"script":"NOW(\"YYYY-MM-DD\")","formula":"NOW(\"YYYY-MM-DD\")","functions":["NOW"],"dependencies":[]},"query_country":"brazil"},"resourceName":"Covid19"},"request-type":{"parameters":{"query_day":"expression","query_country":"str"},"resourceName":"resource"},"subflow_input_arguments":{"request":{"key":{"parameters":{"query_day":{"script":"NOW(\"YYYY-MM-DD\")","formula":"NOW(\"YYYY-MM-DD\")","functions":["NOW"],"dependencies":[]},"query_country":"brazil"},"resourceName":"Covid19"},"source":{"parameters":{"query_day":"expression","query_country":"str"},"resourceName":"resource"}}},"pageId":"page.Page1"},{"x":600,"y":30,"z":"data:Covid19191879204","id":"57e433ff.6522f4","type":"subflow:own_105ec0bb.2f7d7","wires":[[]],"subflow_input_arguments":{"assignment":{"key":{"data":"records@@@701ee485.655dfc","reference":"BR"},"source":{"data":"node","reference":"data-reference"}}}},{"x":100,"y":30,"z":"data:Covid19191879204","id":"58aaf459.6c1d44","type":"event","wires":[["701ee485.655dfc"]],"idType":"event","eventSource":"page:1:onPageDidMount","fallbackName":"Page mounted","isConfigurable":false},{"x":600,"y":30,"z":"data:Covid19196859280","id":"61a64a41.eb62bc","type":"subflow:own_105ec0bb.2f7d7","wires":[[]],"subflow_input_arguments":{"assignment":{"key":{"data":"records@@@81a37596.691f4","reference":"PT"},"source":{"data":"node","reference":"data-reference"}}}},{"x":350,"y":30,"z":"data:Covid19191879204","id":"701ee485.655dfc","type":"subflow:own_100f5064.6f140","wires":[["57e433ff.6522f4","a04e12d.374aff"],["a04e12d.374aff"]],"request":{"parameters":{"query_day":{"script":"NOW(\"YYYY-MM-DD\")","formula":"NOW(\"YYYY-MM-DD\")","functions":["NOW"],"dependencies":[]},"query_country":"brasil"},"resourceName":"Covid19"},"request-type":{"parameters":{"query_day":"expression","query_country":"str"},"resourceName":"resource"},"subflow_input_arguments":{"request":{"key":{"parameters":{"query_day":{"script":"NOW(\"YYYY-MM-DD\")","formula":"NOW(\"YYYY-MM-DD\")","functions":["NOW"],"dependencies":[]},"query_country":"brasil"},"resourceName":"Covid19"},"source":{"parameters":{"query_day":"expression","query_country":"str"},"resourceName":"resource"}}}},{"x":304,"y":39,"z":"page:1","id":"88df3783.fac4d8","type":"subflow:own_232864f8.5b3ca","wires":[["d1f6fa81.08f3a","9beef45f.f7c3f8"]],"subflow_input_arguments":{"text":{"key":"","source":"str"}},"pageId":"page.Page1"},{"x":100,"y":30,"z":"data:Covid19196859280","id":"978c6c9c.44edb8","type":"event","wires":[["81a37596.691f4"]],"idType":"event","eventSource":"page:1:onPageDidMount","fallbackName":"Page mounted","isConfigurable":false},{"x":350,"y":110,"z":"data:Covid19196859280","id":"99cfccf1.755488","type":"subflow:own_97b54227.3b127","wires":[["81a37596.691f4"]],"subflow_input_arguments":{"time":{"key":5000,"source":"num"},"unit":{"key":"ms","source":"str"}}},{"x":363,"y":155,"z":"page:1","id":"9beef45f.f7c3f8","type":"subflow:own_100f5064.6f140","wires":[["f35865866c254.45cc82dd4befd"],[]],"request":{"parameters":{"query_day":{"script":"NOW(\"YYYY-MM-DD\")","formula":"NOW(\"YYYY-MM-DD\")","functions":["NOW"],"dependencies":[]},"query_country":"portugal"},"resourceName":"Covid19"},"request-type":{"parameters":{"query_day":"expression","query_country":"str"},"resourceName":"resource"},"subflow_input_arguments":{"request":{"key":{"parameters":{"query_day":{"script":"NOW(\"YYYY-MM-DD\")","formula":"NOW(\"YYYY-MM-DD\")","functions":["NOW"],"dependencies":[]},"query_country":"portugal"},"resourceName":"Covid19"},"source":{"parameters":{"query_day":"expression","query_country":"str"},"resourceName":"resource"}}},"pageId":"page.Page1"},{"x":110,"y":40,"z":"page:1","id":"6a27e2e08ab44.30720c53b263a","type":"event","wires":[["88df3783.fac4d8"]],"idType":"event","eventSource":"page:1:onPageDidMount","fallbackName":"Page mounted","isConfigurable":true,"pageId":"page.Page1"},{"x":687,"y":129,"z":"page:1","id":"f35865866c254.45cc82dd4befd","type":"subflow:own_91f3e62e.3f65c","wires":[[]],"pageId":"page.Page1"}],"components":{"1-17ddd27a-4342-46a8-88c8-21fdcbab2fc3":{"id":"1-17ddd27a-4342-46a8-88c8-21fdcbab2fc3","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:17ddd27a-4342-46a8-88c8-21fdcbab2fc3","styles":{"holder":{"flex":1,"backgroundColor":"rgb(255,255,255)","paddingTop":8,"paddingLeft":16,"paddingRight":16,"paddingBottom":8,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Layout","pageId":"page.Page1"},"7c1e59e4-7859-4ec8-9935-dabbf58c2374":{"id":"7c1e59e4-7859-4ec8-9935-dabbf58c2374","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"COVID 19","visible":true,"flowGroupId":"page:1:component:7c1e59e4-7859-4ec8-9935-dabbf58c2374","styles":{"text":{"color":"rgb(0,0,0)","fontSize":28,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","alignSelf":"center","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1"},"ec082f26-7cb8-4f5c-8f24-7fbc8630db55":{"id":"ec082f26-7cb8-4f5c-8f24-7fbc8630db55","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Estatística diária","visible":true,"flowGroupId":"page:1:component:ec082f26-7cb8-4f5c-8f24-7fbc8630db55","styles":{"text":{"color":"rgb(0,0,0)","fontSize":16,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"alignSelf":"center","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1"},"d89d1751-1c99-4db8-a1f1-be45e0a0ecb9":{"id":"d89d1751-1c99-4db8-a1f1-be45e0a0ecb9","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:d89d1751-1c99-4db8-a1f1-be45e0a0ecb9","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"7a591832-36e3-4c35-8930-c9f54967512a":{"id":"7a591832-36e3-4c35-8930-c9f54967512a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","columns","backgroundImage"],"columns":1,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:7a591832-36e3-4c35-8930-c9f54967512a","styles":{"holder":{"width":"100%","opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"flexDirection":"row","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","backfaceVisibility":"hidden","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"fe98a843-29f0-4ca4-8d06-eac1152c8e07":{"id":"fe98a843-29f0-4ca4-8d06-eac1152c8e07","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:fe98a843-29f0-4ca4-8d06-eac1152c8e07","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"49acb31d-944e-49da-8f44-83d62b2379db":{"id":"49acb31d-944e-49da-8f44-83d62b2379db","props":{"contextPropTypes":["visible","data","styles","animationsConfig","src"],"src":"https://appgyver-meap-assets.s3.amazonaws.com/uploads/asset/acual_asset/c62c922d-a6b4-471d-8e91-ec82e183fcdf/image.png","visible":true,"flowGroupId":"page:1:component:49acb31d-944e-49da-8f44-83d62b2379db","styles":{"con":{"marginTop":8,"borderRadius":0.1,"marginBottom":8,"width":"100%","opacity":1,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"borderColor":"rgb(0,0,0)","borderWidth":0,"marginRight":0,"backfaceVisibility":"hidden","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"image":{"width":"100%","resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Picture","pageId":"page.Page1"},"25cde6d7-509d-4784-a847-d6eef241b480":{"id":"25cde6d7-509d-4784-a847-d6eef241b480","props":{"contextPropTypes":["visible","data","styles","animationsConfig","columns","backgroundImage"],"columns":1,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:25cde6d7-509d-4784-a847-d6eef241b480","styles":{"holder":{"width":"100%","opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"flexDirection":"row","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","backfaceVisibility":"hidden","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"5451c23c-f9a7-4830-8324-ffd707a02e12":{"isRepeat":true,"repeatAs":"current","id":"5451c23c-f9a7-4830-8324-ffd707a02e12","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","bindings":[{"type":"data","sourceId":"PT","sourceProp":"","targetProp":"data"}],"flowGroupId":"page:1:component:5451c23c-f9a7-4830-8324-ffd707a02e12","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["data"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"b8cda8de-321b-42a1-83c0-4e1692bf350b":{"isComposite":true,"id":"b8cda8de-321b-42a1-83c0-4e1692bf350b","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","content"],"label":"Última atualização","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.day","targetProp":"content"}],"flowGroupId":"page:1:component:b8cda8de-321b-42a1-83c0-4e1692bf350b","styles":{"holder":{"marginTop":8,"marginBottom":8,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"8e6170f2-a0ef-48f2-90e4-f133858a66f2":{"id":"8e6170f2-a0ef-48f2-90e4-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"b8cda8de-321b-42a1-83c0-4e1692bf350b","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:8e6170f2-a0ef-48f2-90e4-f133858a66f2","styles":{"text":{"color":"rgb(138, 154, 167)","fontSize":14,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"b8cda8de-321b-42a1-83c0-4e1692bf350b","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"a642a6ed-2cf3-4b1d-9df7-0ad8fbcd873a":{"id":"a642a6ed-2cf3-4b1d-9df7-0ad8fbcd873a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.day","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:a642a6ed-2cf3-4b1d-9df7-0ad8fbcd873a","styles":{"text":{"color":"rgb(0,0,0)","fontSize":10,"fontFamily":"Open Sans","fontWeight":"300","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"b8cda8de-321b-42a1-83c0-4e1692bf350b","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"59137f00-e8fa-40c3-aef1-1dbb952868b6":{"isComposite":true,"id":"59137f00-e8fa-40c3-aef1-1dbb952868b6","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","content"],"label":"População","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.population","targetProp":"content"}],"flowGroupId":"page:1:component:59137f00-e8fa-40c3-aef1-1dbb952868b6","styles":{"holder":{"marginTop":1,"marginBottom":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"b6e3fb01-0c95-4da4-8c77-f133858a66f2":{"id":"b6e3fb01-0c95-4da4-8c77-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"59137f00-e8fa-40c3-aef1-1dbb952868b6","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:b6e3fb01-0c95-4da4-8c77-f133858a66f2","styles":{"text":{"color":"rgb(138, 154, 167)","fontSize":12,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"59137f00-e8fa-40c3-aef1-1dbb952868b6","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"cc55308c-b83f-4b58-8cba-0ad8fbcd873a":{"id":"cc55308c-b83f-4b58-8cba-0ad8fbcd873a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.population","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:cc55308c-b83f-4b58-8cba-0ad8fbcd873a","styles":{"text":{"color":"rgb(0,0,0)","fontSize":13,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"59137f00-e8fa-40c3-aef1-1dbb952868b6","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"bec1d862-8892-47bb-810f-e8a433d976d1":{"isComposite":true,"id":"bec1d862-8892-47bb-810f-e8a433d976d1","props":{"contextPropTypes":["visible","data","styles","animationsConfig"],"visible":true,"flowGroupId":"page:1:component:bec1d862-8892-47bb-810f-e8a433d976d1","styles":{"holder":{"marginTop":8,"borderColor":"rgb(138, 154, 167)","borderBottomWidth":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","display":"flex","borderStyle":"solid","alignContent":"flex-start","flexDirection":"column","justifyContent":"flex-start"},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"6dba3562-8bf3-461c-a286-205052f7de51":{"id":"6dba3562-8bf3-461c-a286-205052f7de51","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":false,"backgroundImage":"","flowGroupId":"page:1:component:6dba3562-8bf3-461c-a286-205052f7de51","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rcid":"bec1d862-8892-47bb-810f-e8a433d976d1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"55d03173-4ca6-4b58-bcd9-3033a77b4d31":{"id":"55d03173-4ca6-4b58-bcd9-3033a77b4d31","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Casos","visible":true,"flowGroupId":"page:1:component:55d03173-4ca6-4b58-bcd9-3033a77b4d31","styles":{"text":{"color":"rgb(0,0,0)","fontSize":15,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":1,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"69a065f9-0046-4919-b266-85982f9ade58":{"isComposite":true,"id":"69a065f9-0046-4919-b266-85982f9ade58","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","content"],"label":"Novos","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.cases.new","targetProp":"content"}],"flowGroupId":"page:1:component:69a065f9-0046-4919-b266-85982f9ade58","styles":{"holder":{"marginTop":1,"marginBottom":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"f3055c47-50cd-477a-b7d4-f133858a66f2":{"id":"f3055c47-50cd-477a-b7d4-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"69a065f9-0046-4919-b266-85982f9ade58","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:f3055c47-50cd-477a-b7d4-f133858a66f2","styles":{"text":{"color":"rgb(138, 154, 167)","fontSize":12,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"69a065f9-0046-4919-b266-85982f9ade58","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"fcf253d0-0bb2-4050-81fe-0ad8fbcd873a":{"id":"fcf253d0-0bb2-4050-81fe-0ad8fbcd873a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.cases.new","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:fcf253d0-0bb2-4050-81fe-0ad8fbcd873a","styles":{"text":{"color":"rgb(0,0,0)","fontSize":13,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"69a065f9-0046-4919-b266-85982f9ade58","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"6aed0cfa-192a-429f-8b09-7fc45b19402f":{"isComposite":true,"id":"6aed0cfa-192a-429f-8b09-7fc45b19402f","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","content"],"label":"Ativos","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.cases.active","targetProp":"content"}],"flowGroupId":"page:1:component:6aed0cfa-192a-429f-8b09-7fc45b19402f","styles":{"holder":{"marginTop":1,"marginBottom":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"bbf7dc8d-24ee-42f2-afe2-f133858a66f2":{"id":"bbf7dc8d-24ee-42f2-afe2-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"6aed0cfa-192a-429f-8b09-7fc45b19402f","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:bbf7dc8d-24ee-42f2-afe2-f133858a66f2","styles":{"text":{"color":"rgb(138, 154, 167)","fontSize":12,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"6aed0cfa-192a-429f-8b09-7fc45b19402f","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"f7093a7e-d494-41c8-b794-0ad8fbcd873a":{"id":"f7093a7e-d494-41c8-b794-0ad8fbcd873a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.cases.active","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:f7093a7e-d494-41c8-b794-0ad8fbcd873a","styles":{"text":{"color":"rgb(0,0,0)","fontSize":13,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"6aed0cfa-192a-429f-8b09-7fc45b19402f","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"e28f172f-4927-4bcd-9eac-9d3399b74d1a":{"isComposite":true,"id":"e28f172f-4927-4bcd-9eac-9d3399b74d1a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","content"],"label":"Críticos","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.cases.critical","targetProp":"content"}],"flowGroupId":"page:1:component:e28f172f-4927-4bcd-9eac-9d3399b74d1a","styles":{"holder":{"marginTop":1,"marginBottom":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"c69e02ba-cfef-4284-8aab-f133858a66f2":{"id":"c69e02ba-cfef-4284-8aab-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"e28f172f-4927-4bcd-9eac-9d3399b74d1a","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:c69e02ba-cfef-4284-8aab-f133858a66f2","styles":{"text":{"color":"rgb(138, 154, 167)","fontSize":12,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"e28f172f-4927-4bcd-9eac-9d3399b74d1a","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"3a6b5fb5-75e7-495a-8d32-0ad8fbcd873a":{"id":"3a6b5fb5-75e7-495a-8d32-0ad8fbcd873a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.cases.critical","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:3a6b5fb5-75e7-495a-8d32-0ad8fbcd873a","styles":{"text":{"color":"rgb(0,0,0)","fontSize":13,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"e28f172f-4927-4bcd-9eac-9d3399b74d1a","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"c7ef6d58-f696-4787-9db9-d683435b7d04":{"isComposite":true,"id":"c7ef6d58-f696-4787-9db9-d683435b7d04","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","content"],"label":"Recuperados","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.cases.recovered","targetProp":"content"}],"flowGroupId":"page:1:component:c7ef6d58-f696-4787-9db9-d683435b7d04","styles":{"holder":{"marginTop":1,"marginBottom":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"a8ccc2f4-4155-40d9-9691-f133858a66f2":{"id":"a8ccc2f4-4155-40d9-9691-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"c7ef6d58-f696-4787-9db9-d683435b7d04","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:a8ccc2f4-4155-40d9-9691-f133858a66f2","styles":{"text":{"color":"rgb(138, 154, 167)","fontSize":12,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"c7ef6d58-f696-4787-9db9-d683435b7d04","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"759b6c8b-772c-4bcb-9f97-0ad8fbcd873a":{"id":"759b6c8b-772c-4bcb-9f97-0ad8fbcd873a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.cases.recovered","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:759b6c8b-772c-4bcb-9f97-0ad8fbcd873a","styles":{"text":{"color":"rgb(0,0,0)","fontSize":13,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"c7ef6d58-f696-4787-9db9-d683435b7d04","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"f756b860-347e-4ad0-a206-75e5af5fc328":{"isComposite":true,"id":"f756b860-347e-4ad0-a206-75e5af5fc328","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","content"],"label":"Total\n","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.cases.total","targetProp":"content"}],"flowGroupId":"page:1:component:f756b860-347e-4ad0-a206-75e5af5fc328","styles":{"holder":{"marginTop":1,"marginBottom":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"509a9536-7b99-496f-8a3f-f133858a66f2":{"id":"509a9536-7b99-496f-8a3f-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"f756b860-347e-4ad0-a206-75e5af5fc328","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:509a9536-7b99-496f-8a3f-f133858a66f2","styles":{"text":{"color":"rgb(138, 154, 167)","fontSize":12,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"f756b860-347e-4ad0-a206-75e5af5fc328","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"41f6aad5-e0c4-4f4f-8b3e-0ad8fbcd873a":{"id":"41f6aad5-e0c4-4f4f-8b3e-0ad8fbcd873a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.cases.total","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:41f6aad5-e0c4-4f4f-8b3e-0ad8fbcd873a","styles":{"text":{"color":"rgb(0,0,0)","fontSize":13,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"f756b860-347e-4ad0-a206-75e5af5fc328","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"b6cd59c2-a5eb-4cde-9000-562987fbd6d5":{"isComposite":true,"id":"b6cd59c2-a5eb-4cde-9000-562987fbd6d5","props":{"contextPropTypes":["visible","data","styles","animationsConfig"],"visible":true,"flowGroupId":"page:1:component:b6cd59c2-a5eb-4cde-9000-562987fbd6d5","styles":{"holder":{"marginTop":8,"borderColor":"rgb(138, 154, 167)","borderBottomWidth":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","display":"flex","borderStyle":"solid","alignContent":"flex-start","flexDirection":"column","justifyContent":"flex-start"},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"91bd35fd-e8f0-458f-8a5d-205052f7de51":{"id":"91bd35fd-e8f0-458f-8a5d-205052f7de51","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":false,"backgroundImage":"","flowGroupId":"page:1:component:91bd35fd-e8f0-458f-8a5d-205052f7de51","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rcid":"b6cd59c2-a5eb-4cde-9000-562987fbd6d5","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"dbbd2ed2-eef3-4ab6-b98a-236126e72dd2":{"id":"dbbd2ed2-eef3-4ab6-b98a-236126e72dd2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Óbitos","visible":true,"flowGroupId":"page:1:component:dbbd2ed2-eef3-4ab6-b98a-236126e72dd2","styles":{"text":{"color":"rgb(0,0,0)","fontSize":15,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":1,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"42afef87-e0ea-4d92-ac0c-805d2b7acb20":{"isComposite":true,"id":"42afef87-e0ea-4d92-ac0c-805d2b7acb20","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","content"],"label":"Novos\n","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.deaths.new","targetProp":"content"}],"flowGroupId":"page:1:component:42afef87-e0ea-4d92-ac0c-805d2b7acb20","styles":{"holder":{"marginTop":1,"marginBottom":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"8ff3893c-c89b-49ad-be9f-f133858a66f2":{"id":"8ff3893c-c89b-49ad-be9f-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"42afef87-e0ea-4d92-ac0c-805d2b7acb20","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:8ff3893c-c89b-49ad-be9f-f133858a66f2","styles":{"text":{"color":"rgb(138, 154, 167)","fontSize":12,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"42afef87-e0ea-4d92-ac0c-805d2b7acb20","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"f53050ff-5fda-4ed4-bc66-0ad8fbcd873a":{"id":"f53050ff-5fda-4ed4-bc66-0ad8fbcd873a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.deaths.new","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:f53050ff-5fda-4ed4-bc66-0ad8fbcd873a","styles":{"text":{"color":"rgb(0,0,0)","fontSize":13,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"42afef87-e0ea-4d92-ac0c-805d2b7acb20","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"07d21929-cc2e-4ab4-b33e-5c67adf2919b":{"isComposite":true,"id":"07d21929-cc2e-4ab4-b33e-5c67adf2919b","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","content"],"label":"Total\n","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.deaths.total","targetProp":"content"}],"flowGroupId":"page:1:component:07d21929-cc2e-4ab4-b33e-5c67adf2919b","styles":{"holder":{"marginTop":1,"marginBottom":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"6253e8b9-a7cb-4997-915f-f133858a66f2":{"id":"6253e8b9-a7cb-4997-915f-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"07d21929-cc2e-4ab4-b33e-5c67adf2919b","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:6253e8b9-a7cb-4997-915f-f133858a66f2","styles":{"text":{"color":"rgb(138, 154, 167)","fontSize":12,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"07d21929-cc2e-4ab4-b33e-5c67adf2919b","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"c2666f6a-db68-460f-99b0-0ad8fbcd873a":{"id":"c2666f6a-db68-460f-99b0-0ad8fbcd873a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.deaths.total","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:c2666f6a-db68-460f-99b0-0ad8fbcd873a","styles":{"text":{"color":"rgb(0,0,0)","fontSize":13,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"07d21929-cc2e-4ab4-b33e-5c67adf2919b","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"32498b70-9eff-4770-8638-19ca89f7b32c":{"isComposite":true,"id":"32498b70-9eff-4770-8638-19ca89f7b32c","props":{"contextPropTypes":["visible","data","styles","animationsConfig"],"visible":true,"flowGroupId":"page:1:component:32498b70-9eff-4770-8638-19ca89f7b32c","styles":{"holder":{"marginTop":8,"borderColor":"rgb(138, 154, 167)","borderBottomWidth":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","display":"flex","borderStyle":"solid","alignContent":"flex-start","flexDirection":"column","justifyContent":"flex-start"},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"6a7bc196-d714-4388-9328-205052f7de51":{"id":"6a7bc196-d714-4388-9328-205052f7de51","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":false,"backgroundImage":"","flowGroupId":"page:1:component:6a7bc196-d714-4388-9328-205052f7de51","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rcid":"32498b70-9eff-4770-8638-19ca89f7b32c","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"420ec023-b929-4730-8ca1-6f3a4aae4f9a":{"id":"420ec023-b929-4730-8ca1-6f3a4aae4f9a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Testes","visible":true,"flowGroupId":"page:1:component:420ec023-b929-4730-8ca1-6f3a4aae4f9a","styles":{"text":{"color":"rgb(0,0,0)","fontSize":15,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":1,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"c4a14da7-cdd9-4d3d-a25f-ec5d43912fb2":{"isComposite":true,"id":"c4a14da7-cdd9-4d3d-a25f-ec5d43912fb2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","content"],"label":"Total\n","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.tests.total","targetProp":"content"}],"flowGroupId":"page:1:component:c4a14da7-cdd9-4d3d-a25f-ec5d43912fb2","styles":{"holder":{"marginTop":1,"marginBottom":1,"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"e46439d1-3018-4e3f-afa2-f133858a66f2":{"id":"e46439d1-3018-4e3f-afa2-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"c4a14da7-cdd9-4d3d-a25f-ec5d43912fb2","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:e46439d1-3018-4e3f-afa2-f133858a66f2","styles":{"text":{"color":"rgb(138, 154, 167)","fontSize":12,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"c4a14da7-cdd9-4d3d-a25f-ec5d43912fb2","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"ccb9089e-1bee-4fdc-b995-0ad8fbcd873a":{"id":"ccb9089e-1bee-4fdc-b995-0ad8fbcd873a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.","visible":true,"bindings":[{"type":"repeat","sourceProp":"current.tests.total","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:1:component:ccb9089e-1bee-4fdc-b995-0ad8fbcd873a","styles":{"text":{"color":"rgb(0,0,0)","fontSize":13,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rcid":"c4a14da7-cdd9-4d3d-a25f-ec5d43912fb2","rocid":"5451c23c-f9a7-4830-8324-ffd707a02e12"},"85738134-ce42-4524-9a62-9f110ca23cf4":{"id":"85738134-ce42-4524-9a62-9f110ca23cf4","props":{"contextPropTypes":["visible","data","styles","animationsConfig","columns","backgroundImage"],"columns":1,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:85738134-ce42-4524-9a62-9f110ca23cf4","styles":{"holder":{"width":"100%","opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"flexDirection":"row","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","backfaceVisibility":"hidden","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"582bb53e-b9be-4032-8490-eac1152c8e07":{"id":"582bb53e-b9be-4032-8490-eac1152c8e07","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:582bb53e-b9be-4032-8490-eac1152c8e07","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"fbf2f538-8fa9-439a-b2c1-7b11dae7d7aa":{"id":"fbf2f538-8fa9-439a-b2c1-7b11dae7d7aa","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"PT","visible":true,"flowGroupId":"page:1:component:fbf2f538-8fa9-439a-b2c1-7b11dae7d7aa","styles":{"text":{"color":"rgb(0,0,0)","fontSize":16,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1"},"2-9c27c122-3dd9-40a7-8ccf-1bdbdf34d87b":{"id":"2-9c27c122-3dd9-40a7-8ccf-1bdbdf34d87b","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":true,"backgroundImage":"","flowGroupId":"page:2:component:9c27c122-3dd9-40a7-8ccf-1bdbdf34d87b","styles":{"holder":{"flex":1,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Layout","pageId":"page.Page2"}},"app":{"events":{},"id":253508},"theme":{"$fontSizeH1":42,"$fontSizeH2":28,"$fontSizeH3":21,"$fontSizeH4":18,"$fontSizeH5":16,"$fontSizeH6":14,"$spacerBase":8,"$colorNotice":"#E68619","$colorShadow":"rgba(36, 36, 38, 0.25)","$fontWeightH1":"600","$fontWeightH2":"600","$fontWeightH3":"600","$fontWeightH4":"400","$fontWeightH5":"700","$fontWeightH6":"600","$iconSizeTiny":8,"$lineHeightH1":52,"$lineHeightH2":36,"$lineHeightH3":28,"$lineHeightH4":24,"$lineHeightH5":24,"$lineHeightH6":24,"$colorNegative":"#E34850","$colorPositive":"#2D9D78","$fontSizeLabel":14,"$iconSizeLarge":32,"$iconSizeSmall":16,"$inputFontSize":16,"$buttonFontSize":18,"$iconSizeMedium":24,"$inputMinHeight":48,"$buttonMinHeight":56,"$cardBorderColor":"rgb(0,0,0)","$cardBorderStyle":"none","$cardBorderWidth":"0","$cardShadowColor":"rgba(36, 36, 38, 0.25)","$colorBackground":"rgb(255,255,255)","$colorFontNotice":"#E68619","$colorNoticeTint":"rgb(233,146,48)","$fontSizeCaption":12,"$fontWeightLabel":"600","$inputFontFamily":"Open Sans","$inputFontWeight":"400","$letterSpacingH1":"normal","$letterSpacingH2":"normal","$letterSpacingH3":"normal","$letterSpacingH4":"normal","$letterSpacingH5":"0.64","$letterSpacingH6":"normal","$lineHeightLabel":24,"$primaryTabColor":"rgb(0,0,0)","$textTransformH1":"none","$textTransformH2":"none","$textTransformH3":"none","$textTransformH4":"none","$textTransformH5":"uppercase","$textTransformH6":"none","$buttonFontFamily":"Open Sans","$cardBorderRadius":3,"$colorFontPrimary":"rgb(0,0,0)","$colorFontSubdued":"rgb(138, 154, 167)","$colorInformative":"rgb(9, 59, 154)","$colorNoticeShade":"rgb(207,121,23)","$fontFamilyHeader":"Open Sans","$imageBorderColor":"rgb(138, 154, 167)","$imageBorderStyle":"none","$imageBorderWidth":0,"$inputBorderStyle":"solid","$inputColorBorder":"rgb(138, 154, 167)","$inputShadowColor":"rgba(36, 36, 38, 0.25)","$buttonBorderStyle":"none","$buttonBorderWidth":0,"$buttonShadowColor":"rgba(36, 36, 38, 0.25)","$cardShadowEnabled":true,"$cardShadowOffsetX":0,"$cardShadowOffsetY":2,"$checkboxSizeLarge":30,"$checkboxSizeSmall":19,"$colorFontDisabled":"rgb(138, 154, 167)","$colorFontNegative":"#E34850","$colorFontPositive":"#2D9D78","$colorNegativeTint":"rgb(230,94,101)","$colorPositiveTint":"rgb(51,177,135)","$fontFamilyContent":"Open Sans","$fontSizeParagraph":16,"$fontWeightCaption":"700","$imageBorderRadius":0,"$inputBorderRadius":0,"$lineHeightCaption":20,"$listItemMinHeight":64,"$primaryAppBgColor":"rgb(240, 241, 244)","$primaryTabBgColor":"rgb(240, 241, 244)","$buttonBorderRadius":3,"$cardMarginVertical":16,"$checkboxSizeMedium":24,"$colorFontHighlight":"rgb(0,62,255)","$colorNegativeShade":"rgb(224,50,59)","$colorPositiveShade":"rgb(39,137,105)","$inputShadowEnabled":false,"$inputShadowOffsetX":0,"$inputShadowOffsetY":0,"$letterSpacingLabel":"0","$listItemImageWidth":48,"$primaryNavBarColor":"rgb(0,0,0)","$textTransformLabel":"none","$buttonShadowEnabled":false,"$buttonShadowOffsetX":0,"$buttonShadowOffsetY":4,"$cardBackgroundColor":"rgb(255,255,255)","$cardPaddingVertical":16,"$checkboxIconChecked":"check-square","$colorContentPrimary":"rgb(0,0,0)","$colorContentSubdued":"rgb(138, 154, 167)","$colorNoticeContrast":"rgb(255, 255, 255)","$fontWeightParagraph":"400","$inputBorderWidthTop":0,"$inputFontLineHeight":24,"$lineHeightParagraph":24,"$listItemBorderColor":"rgb(138, 154, 167)","$listItemBorderStyle":"solid","$listItemBorderWidth":1,"$paddingPageVertical":8,"$primaryTabTintColor":"rgb(9, 59, 154)","$buttonFontLineHeight":24,"$cardShadowBlurRadius":5,"$colorFontInformative":"rgb(9, 59, 154)","$colorFontPlaceholder":"rgb(138, 154, 167)","$colorInformativeTint":"rgb(10,68,178)","$inputBorderWidthLeft":0,"$inputColorBackground":"rgba(255,255,255,0)","$inputPaddingVertical":8,"$letterSpacingCaption":"0.48","$primaryNavBarBgColor":"rgb(240, 241, 244)","$radioButtonSizeLarge":30,"$radioButtonSizeSmall":19,"$textTransformCaption":"uppercase","$cardPaddingHorizontal":16,"$checkboxIconUnchecked":"square","$colorContentHighlight":"rgb(0,62,255)","$colorInformativeShade":"rgb(8,50,130)","$colorNegativeContrast":"rgb(255, 255, 255)","$colorPositiveContrast":"rgb(255, 255, 255)","$inputBorderWidthRight":0,"$inputShadowBlurRadius":0,"$paddingPageHorizontal":16,"$radioButtonSizeMedium":24,"$buttonShadowBlurRadius":7,"$fontSizeParagraphLarge":18,"$fontSizeParagraphSmall":14,"$inputBorderWidthBottom":1,"$inputFontLetterSpacing":"normal","$inputFontTextTransform":"none","$inputPaddingHorizontal":0,"$letterSpacingParagraph":"normal","$textTransformParagraph":"none","$buttonFontLetterSpacing":"normal","$buttonFontTextTransform":"none","$inputLabelFontTextAlign":"left","$listItemImageWidthLarge":72,"$radioButtonIconSelected":"check-square","$colorBackgroundSecondary":"rgb(240, 241, 244)","$colorInformativeContrast":"rgb(255, 255, 255)","$fontWeightParagraphLarge":"400","$fontWeightParagraphSmall":"400","$inputLabelMarginVertical":0,"$lineHeightParagraphLarge":24,"$lineHeightParagraphSmall":16,"$radioButtonIconUnselected":"square","$letterSpacingParagraphLarge":"normal","$letterSpacingParagraphSmall":"normal","$primaryTabInactiveTintColor":"rgb(138, 154, 167)","$textTransformParagraphLarge":"none","$textTransformParagraphSmall":"none","$inputLabelBottomMarginHorizontal":0},"fonts":[],"expressions":{},"globalCanvas":{"uid":"page.Page2","id":2,"contextId":"canvas/page.Page2","pageId":"page.Page2"},"i18n":{"translations":{},"supportedLanguages":[]},"environment":{"workspaceApp":{"id":253508},"app":{"id":355736,"demo":false,"paid":false,"free":true,"tokens":{"steroids":"be7cb0484f6380332c32d4024e485f6ae6aec81ab9ad8cb43a72136f5274aa59","data":"c31b01ee3827f53c49cf48cfd9f0d253","segmentOwnerId":null,"androidGcmSenderProjectId":null},"auth":{"primary":"anonymous"},"title":"Estatísticas COVID"},"links":{"user_account":"https://accounts.appgyver.com/users/edit"},"endpoints":{"domain":"appgyver.com","auth":"https://rest-auth.appgyver.com/api/v5","data":"https://proxy-api.appgyver.com/v3/","debug":"https://debug-api.appgyver.com/debug_api"},"auth":{"endpoint":"https://rest-auth.appgyver.com/api/v5"},"data":{"type":"rest","endpoint":"https://proxy-api.appgyver.com/v3/","bundle":{"options":{"baseUrl":"https://proxy-api.appgyver.com/v3/","headers":{"steroidsAppId":"355736","steroidsApiKey":"be7cb0484f6380332c32d4024e485f6ae6aec81ab9ad8cb43a72136f5274aa59","RestAuthorization":"c31b01ee3827f53c49cf48cfd9f0d253"}},"resources":{}},"collections":[],"relations":[],"business_objects":[]},"modules":{"routes":{}}},"dataResources":{"Covid19":{"id":"Covid19","type":"rest","operations":{"list":{"parameters":[{"id":"query_country","type":"string","title":"country","isEncoded":false,"is_static":false,"placement":"query","is_optional":false,"placement_key":"country"},{"id":"query_day","type":"string","title":"day","isEncoded":false,"is_static":false,"placement":"query","is_optional":true,"placement_key":"day"}],"relative_path":"/history","response_key_path":"response"},"retrieve":{"parameters":[{"id":"path_id","type":"string","title":"id","is_static":false,"placement":"path","description":"Resource ID to retrieve","is_optional":false,"placement_key":"id"}],"relative_path":"/{id}"}},"parameters":[{"id":"header_x_rapidapi_key","type":"string","title":"x-rapidapi-key","default":"dfad450ba6mshef5508cf54ceaa8p108f4cjsn54d4b9c7fd3a","isEncoded":false,"is_static":true,"placement":"header","is_optional":true,"placement_key":"x-rapidapi-key"},{"id":"header_x_rapidapi_host","type":"string","title":"x-rapidapi-host","default":"covid-193.p.rapidapi.com","isEncoded":false,"is_static":true,"placement":"header","is_optional":true,"placement_key":"x-rapidapi-host"}],"base_url":"https://covid-193.p.rapidapi.com"}},"connectorConfigurations":{}},"__N_SSG":true}